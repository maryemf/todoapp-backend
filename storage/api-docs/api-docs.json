{
    "openapi": "3.0.0",
    "info": {
        "title": "ToDoAppBk Documentation",
        "description": "ToDoAppBk",
        "contact": {
            "email": "maryesthermf@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:3020",
            "description": "ToDoAppBk Server"
        }
    ],
    "paths": {
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Category list",
                "description": "Display a listing of the resource.",
                "operationId": "3f5817a34833d0a1f4af4548dd3aeaba",
                "responses": {
                    "200": {
                        "description": "Category list"
                    },
                    "default": {
                        "description": "Error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a category",
                "description": "Store a newly created resource in storage.",
                "operationId": "71fcad552bb0eaba9fb191fd8d8dcab0",
                "requestBody": {
                    "description": "Pass the category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category created"
                    },
                    "default": {
                        "description": "Error."
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category by id",
                "description": "Display the specified resource.",
                "operationId": "c68e76d323c008827a9e47398b1583de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "int": {
                                "summary": "Category Id.",
                                "value": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get category by id."
                    },
                    "404": {
                        "description": "Category not found."
                    },
                    "default": {
                        "description": "Error."
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "description": "Update the specified resource in storage.",
                "operationId": "0e686b2748211cc688333ed705dc111f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "int": {
                                "summary": "Category Id",
                                "value": "1"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass the category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated"
                    },
                    "404": {
                        "description": "Category id not found."
                    },
                    "default": {
                        "description": "Error."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category by id",
                "description": "Remove the specified resource from storage.",
                "operationId": "4c12e22a7f8c617bd83bfa1fdc05428d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "int": {
                                "summary": "Category Id",
                                "value": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete category by id."
                    },
                    "404": {
                        "description": "Category not found."
                    },
                    "default": {
                        "description": "Error."
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Task list",
                "description": "Display a listing of the resource.",
                "operationId": "471d938a3bfaeb6fbd981d7c3e2728b0",
                "responses": {
                    "200": {
                        "description": "Task list"
                    },
                    "default": {
                        "description": "Error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a task",
                "description": "Store a newly created resource in storage.",
                "operationId": "f803ebdb2300acdb7e93bbe8d0b9a2e8",
                "requestBody": {
                    "description": "Pass the task data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task created"
                    },
                    "default": {
                        "description": "Error."
                    }
                }
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task by id",
                "description": "Display the specified resource.",
                "operationId": "90b3cd4d2d4b416dc989d2055dbed06c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "int": {
                                "summary": "Task Id.",
                                "value": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get task by id."
                    },
                    "404": {
                        "description": "Task not found."
                    },
                    "default": {
                        "description": "Error."
                    }
                }
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a task",
                "description": "Update the specified resource in storage.",
                "operationId": "1aaf37e74360ef4c10fadaee02ae77fb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "int": {
                                "summary": "Task Id",
                                "value": "1"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass the task data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated"
                    },
                    "404": {
                        "description": "Task id not found."
                    },
                    "default": {
                        "description": "Error."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete task by id",
                "description": "Remove the specified resource from storage.",
                "operationId": "ad582480cd57c2a4e3b6a426943eeca5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "int": {
                                "summary": "Task Id",
                                "value": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete task by id."
                    },
                    "404": {
                        "description": "Task not found."
                    },
                    "default": {
                        "description": "Error."
                    }
                }
            }
        },
        "/api/tasks/category/{id}": {
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Filter tasks by category Id",
                "description": "Filter tasks by category Id.",
                "operationId": "91cfe6485fc9c1aa64c8d0a6c35ba433",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "int": {
                                "summary": "Category Id",
                                "value": "1"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data filtered."
                    },
                    "default": {
                        "description": "Error."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BaseModel": {
                "properties": {
                    "created_at": {
                        "description": "Initial creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "deleted_at": {
                        "description": "Soft delete timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "Category": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "category name",
                        "type": "string",
                        "example": "Category 1"
                    },
                    "description": {
                        "description": "category description",
                        "type": "string",
                        "example": "This is a example category"
                    },
                    "color": {
                        "description": "hex for category color (is autogenerated aleatory)",
                        "type": "string",
                        "example": "#4772fe"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "Task": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "task name",
                        "type": "string",
                        "example": "Task 1"
                    },
                    "description": {
                        "description": "task description",
                        "type": "string",
                        "example": "This is a example task"
                    },
                    "is_complete": {
                        "description": "Task completed or not",
                        "type": "boolean",
                        "example": "false"
                    },
                    "start_date": {
                        "description": "Start date for task",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "description": "End date for task",
                        "type": "string",
                        "format": "date-time"
                    },
                    "completed_date": {
                        "description": "Date on completed task",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Task"
                }
            }
        }
    }
}