<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use App\Traits\HelpersTrait;

/**
 *
 * @OA\Schema(
 * required={"name"},
 * @OA\Xml(name="Category"),
 * @OA\Property(property="name", type="string",  description="category name", example="Category 1"),
 * @OA\Property(property="description", type="string",  description="category description", example="This is a example category"),
 * @OA\Property(property="color", type="string",  description="hex for category color (is autogenerated aleatory)", example="#4772fe"),
 * @OA\Property(property="created_at", ref="#/components/schemas/BaseModel/properties/created_at"),
 * @OA\Property(property="updated_at", ref="#/components/schemas/BaseModel/properties/updated_at"),
 * @OA\Property(property="deleted_at", ref="#/components/schemas/BaseModel/properties/deleted_at")
 * )
 *
 * Class Category
 *
 */

class Category extends Model
{
    use HasFactory, HelpersTrait;

    protected $table = 'category';

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
        'description',
        'color'
    ];

    /**
     * Get only available fields
     *
     * @param  array  $input
     * @return array
     */
    public function filterFields(array $input)
    {
        $fields = $this->fillable;
        return $this->filterInputFields($fields, $input);
    }

    /**
     * The tasks that belong to the category.
    */
    public function tasks()
    {
        return $this->belongsToMany(Task::class, 'task_category', 'category_id');
    }
}
